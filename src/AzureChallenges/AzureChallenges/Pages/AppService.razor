@page "/appservice"
@using AzureChallenges.Data
@inject AppServiceChallengeService ChallengeService;

<h3>App Service</h3>

<table class="table table-sm" style="max-width: fit-content">
    <tbody>
    <SectionField Title="Subscription Id" Value="@_state.SubscriptionId" />
    <SectionField Title="Resource Group" Value="@_state.ResourceGroup" />
    <SectionField Title="App Service" Value="@_state.AppService"/>
    </tbody>
</table>

@if (!_challenges.Any())
{
    <p>Loading...</p>
}
else
{
    <div style="max-width: 70%">
        <div class="accordion" id="accordionPanelsStayOpenExample">
            @foreach (var challenge in _challenges)
            {
                if (challenge.ChallengeDefinition.CanShowChallenge != null && challenge.ChallengeDefinition.CanShowChallenge(_state))
                {
                    <ChallengePanel Challenge="challenge" ChallengeService="ChallengeService" OnAfterCheckChallenge="OnAfterCheckChallenge"/>
                }
            }
        </div>
    </div>
}

@code {
    private State _state = new();
    private Challenge[] _challenges = Array.Empty<Challenge>();

    protected override async Task OnInitializedAsync()
    {
        _state = await ChallengeService.GetState();
        _challenges = await ChallengeService.GetChallenges();
    }

    private async Task OnAfterCheckChallenge()
    {
        _state = await ChallengeService.GetState();
        StateHasChanged();
    }
}